Description: fix denial of service when using -vv
Origin: upstream, https://github.com/memcached/memcached/commit/0f605245cf3f37c2efe4e225237ad17256ea2a34
Origin: upstream, https://github.com/memcached/memcached/commit/fbe823d9a61b5149cd6e3b5e17bd28dd3b8dd760
Bug: https://code.google.com/p/memcached/issues/detail?id=306
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=698231

Index: memcached-1.4.13/items.c
===================================================================
--- memcached-1.4.13.orig/items.c	2014-01-07 09:15:11.435407131 -0500
+++ memcached-1.4.13/items.c	2014-01-07 09:15:11.431407131 -0500
@@ -499,12 +499,16 @@
     int was_found = 0;
 
     if (settings.verbose > 2) {
+        int ii;
         if (it == NULL) {
-            fprintf(stderr, "> NOT FOUND %s", key);
+            fprintf(stderr, "> NOT FOUND ");
         } else {
-            fprintf(stderr, "> FOUND KEY %s", ITEM_key(it));
+            fprintf(stderr, "> FOUND KEY ");
             was_found++;
         }
+        for (ii = 0; ii < nkey; ++ii) {
+            fprintf(stderr, "%c", key[ii]);
+        }
     }
 
     if (it != NULL) {
Index: memcached-1.4.13/memcached.c
===================================================================
--- memcached-1.4.13.orig/memcached.c	2014-01-07 09:15:11.435407131 -0500
+++ memcached-1.4.13/memcached.c	2014-01-07 09:15:11.431407131 -0500
@@ -2149,7 +2149,12 @@
     assert(c != NULL);
 
     if (settings.verbose > 1) {
-        fprintf(stderr, "Deleting %s\n", key);
+        int ii;
+        fprintf(stderr, "Deleting ");
+        for (ii = 0; ii < nkey; ++ii) {
+            fprintf(stderr, "%c", key[ii]);
+        }
+        fprintf(stderr, "\n");
     }
 
     if (settings.detail_enabled) {
@@ -2799,8 +2804,14 @@
                 }
 
 
-                if (settings.verbose > 1)
-                    fprintf(stderr, ">%d sending key %s\n", c->sfd, ITEM_key(it));
+                if (settings.verbose > 1) {
+                    int ii;
+                    fprintf(stderr, ">%d sending key ", c->sfd);
+                    for (ii = 0; ii < it->nkey; ++ii) {
+                        fprintf(stderr, "%c", key[ii]);
+                    }
+                    fprintf(stderr, "\n");
+                }
 
                 /* item_get() has incremented it->refcount for us */
                 pthread_mutex_lock(&c->thread->stats.mutex);
